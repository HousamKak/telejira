
# =============================================================================
# pyproject.toml - Modern Python Project Configuration
# =============================================================================

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "telegram-jira-bot"
version = "2.1.0"
description = "A comprehensive Telegram bot for seamless Jira integration"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AI Assistant", email = "ai-assistant@example.com"}
]
maintainers = [
    {name = "AI Assistant", email = "ai-assistant@example.com"}
]
keywords = [
    "telegram", "bot", "jira", "atlassian", "issue-tracking",
    "project-management", "automation", "productivity"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Communications :: Chat",
    "Topic :: Office/Business :: Groupware",
    "Topic :: Software Development :: Bug Tracking",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Framework :: AsyncIO",
    "Natural Language :: English",
    "Typing :: Typed",
]
requires-python = ">=3.9"
dependencies = [
    "python-telegram-bot>=20.7,<21.0",
    "aiohttp>=3.9.0,<4.0.0",
    "aiosqlite>=0.19.0,<1.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "pydantic>=2.5.0,<3.0.0",
    "typing-extensions>=4.8.0",
    "python-dateutil>=2.8.0,<3.0.0",
    "rich>=13.0.0,<14.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-mock>=3.11.0,<4.0.0",
    "black>=23.9.0,<24.0.0",
    "mypy>=1.7.0,<2.0.0",
    "flake8>=6.1.0,<7.0.0",
    "isort>=5.12.0,<6.0.0",
    "pre-commit>=3.5.0,<4.0.0",
]
testing = [
    "pytest>=7.4.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-mock>=3.11.0,<4.0.0",
    "pytest-xdist>=3.3.0,<4.0.0",
]
linting = [
    "black>=23.9.0,<24.0.0",
    "mypy>=1.7.0,<2.0.0",
    "flake8>=6.1.0,<7.0.0",
    "isort>=5.12.0,<6.0.0",
    "pylint>=3.0.0,<4.0.0",
    "bandit>=1.7.5,<2.0.0",
]
docs = [
    "sphinx>=7.2.0,<8.0.0",
    "sphinx-rtd-theme>=1.3.0,<2.0.0",
    "myst-parser>=2.0.0,<3.0.0",
]
monitoring = [
    "prometheus-client>=0.19.0,<1.0.0",
    "structlog>=23.2.0,<24.0.0",
]
cache = [
    "redis>=5.0.0,<6.0.0",
    "aioredis>=2.0.0,<3.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/telegram-jira-bot"
Documentation = "https://github.com/yourusername/telegram-jira-bot/wiki"
Repository = "https://github.com/yourusername/telegram-jira-bot.git"
"Bug Tracker" = "https://github.com/yourusername/telegram-jira-bot/issues"
Changelog = "https://github.com/yourusername/telegram-jira-bot/releases"

[project.scripts]
telegram-jira-bot = "telegram_jira_bot.main:main"
tg-jira = "telegram_jira_bot.main:main"

[tool.setuptools]
packages = ["telegram_jira_bot"]

[tool.setuptools.package-data]
telegram_jira_bot = ["py.typed", "*.sql", "*.json"]

# Testing Configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "database: Database tests",
    "network: Network-dependent tests",
    "slow: Slow running tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Coverage Configuration
[tool.coverage.run]
source = ["telegram_jira_bot"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Black Configuration
[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort Configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["telegram_jira_bot"]
skip_glob = ["*/migrations/*"]

# MyPy Configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "telegram.*",
    "aiohttp.*",
    "aiosqlite.*",
]
ignore_missing_imports = true

# Pylint Configuration
[tool.pylint.messages_control]
disable = [
    "C0330",  # Wrong hanging indentation
    "C0326",  # Bad whitespace
    "R0903",  # Too few public methods
    "R0913",  # Too many arguments
    "W0613",  # Unused argument
]

[tool.pylint.format]
max-line-length = 100

# Bandit Configuration
[tool.bandit]
exclude_dirs = ["tests", "test_*.py"]
skips = ["B101", "B601"]